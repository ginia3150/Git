Gitとは何をするためのものですか？
回答:
分散型バージョン管理システム（DVCS)。ソースコードの変更履歴を追跡し、複数の開発者が同時に作業ができるように設計されている。

なぜGitが必要なのですか？
回答:
複数の開発者が同じプロジェクトに同時に作業することができる。また、全てのファイル変更の履歴を保存しており、いつでも特定のバージョンに戻すことができるため。

Gitの主要な機能は何ですか？主要機能を5つ挙げてください。
回答:
・ステージング - コミットする前に変更内容をステージングエリアに追加し、確認や修正を行うことができる。
・分散型バージョン管理　- 集中型バージョン管理では、複数の開発者が1つのリポジトリを共有する為、変更点の競合が起きやすいデメリットがあるが、分散型バージョン管理では、各コンピューターに独立したローカルリポジトリを保持しているので、競合が発生することはない。
・ブランチ　- 履歴の流れを分岐して記録する。分岐したブランチは他のブランチとマージすることで、一つのブランチにまとめ直すことができる。
・ローカルリポジトリ - リモートリポジトリとの同期を常にする必要はなく、リポジトリの完全なコピーを持つため、オフラインでも作業が可能。
・耐障害性　- サーバーに問題が起きたとしても、各コンピューターのローカルリポジトリが完全なバックアップとして機能する。

GitとGithubの違いは何ですか？
回答:
Gitは、ローカルで動作し、リポジトリの完全なコピーを保持することができるソースコード管理ツール。
Githubは、リモートリポジトリを提供し、複数の開発者が同じプロジェクトの作業を行い、お互いの編集をリアルタイムで見ることができる共同作業用の、webベースのプラットフォーム。

ソースコードやプロジェクト内のファイルの変更を記録したまとまりで、特定の時点でのプロジェクトの状態を表すものを何と言いますか？
回答:
リビジョン。

リビジョンに含まれている情報には何が含まれていますか？
回答:
ファイルの追加、変更、削除などの変更内容や、その変更を説明するコミットメッセージ、またはコミットが行われた日時情報など。

コミット、ブランチ、マージ、プル、プッシュのそれぞれの機能説明を簡潔に書いてください。
回答:
・コミット - 変更をリポジトリに保存する。
・ブランチ - 独立した開発ラインを作成する。
・マージ - 異なるブランチの変更を統合する。
・プル - リモートリポジトリの変更をローカルに取り込む。
・プッシュ - ローカルの変更をリモートリポジトリに反映する。