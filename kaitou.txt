Gitとは何をするためのものですか？
回答: 
・プロジェクトのデータのバージョン管理をするため。

なぜGitが必要なのですか？
回答: 
分散型アーキテクチャで全データの完全バックアップができる。
Linuxカーネルのような大規模プロジェクトを効率的に取り扱いが可能。
数千の並列ブランチへの強力なサポートができる。
スピードがありシンプルな設計である。

＠具体例
・各データを以前の状態に戻す
・プロジェクト丸ごとを以前の状態に戻す
・過去の変更履歴を比較する。
・問題が起こっているかもしれないものを誰が最後に修正したか把握するため
・誰が問題点を混入させたかを確認する。

＠他のVCSとの違い
・スナップショットで差分ではない
・ほとんど全ての操作がローカル
・Gitは完全性を保つ
・Gitは通常はデータを追加するだけ

Gitの主要な機能は何ですか？主要機能を5つ挙げてください。
回答: 
・履歴追跡
・変更点の視覚化
・同時作業のサポート
・マージ機能
・ローカルリポジトリ

GitとGithubの違いは何ですか？
回答: 
Gitは分散型バージョン管理システム(DVCS)であるのに対し、GitHubはGitリポジトリのホスティングを提供するWEBベースのサービス。

ソースコードやプロジェクト内のファイルの変更を記録したまとまりで、特定の時点でのプロジェクトの状態を表すものを何と言いますか？
回答: 
リビジョンもしくは、コミットログ

リビジョンに含まれている情報には何が含まれていますか？
回答: 
・リビジョン番号
・コミットしたユーザー名とメールアドレス
・コミットした日時
・コミットメッセージ
・対象ファイルの変更情報

コミット、ブランチ、マージ、プル、プッシュのそれぞれの機能説明を簡潔に書いてください。
回答: 
コミット：変更をローカルリポジトリに記録する。
ブランチ：新しい開発ラインを作成する。
マージ：二つのブランチを統合する。
プル：リモートリポジトリの変更をローカルに取り込む。
プッシュ：ローカルのコミットをリモートリポジトリに送信する。